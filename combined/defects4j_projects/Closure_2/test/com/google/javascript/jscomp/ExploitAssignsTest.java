/*
 * Copyright 2006 The Closure Compiler Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.javascript.jscomp;

/**
 * Unit tests for {@link ExploitAssigns}
 *
 * @author nicksantos@google.com (Nick Santos)
 * @author acleung@google.com (Alan Leung)
 */
public class ExploitAssignsTest extends CompilerTestCase {

public void testBug1840071724() { 
     test("a.b = a.x; if (a.x) {}", "if (a.b = a.x) {}"); 
     testSame("a.b = a.x; if (a.b) {}"); 
     test("a.b = a.c = a.x; if (a.x) {}", "if (a.b = a.c = a.x) {}"); 
     testSame("a.b = a.c = a.x; if (a.c) {}"); 
     testSame("a.b = a.c = a.x; if (a.b) {}"); 
 }
public void testBug2072343725() { 
     testSame("a = a.x;a = a.x"); 
     testSame("a = a.x;b = a.x"); 
     test("b = a.x;a = a.x", "a = b = a.x"); 
     testSame("a.x = a;a = a.x"); 
     testSame("a.b = a.b.x;a.b = a.b.x"); 
     testSame("a.y = a.y.x;b = a.y;c = a.y.x"); 
     test("a = a.x;b = a;c = a.x", "b = a = a.x;c = a.x"); 
     test("b = a.x;a = b;c = a.x", "a = b = a.x;c = a.x"); 
 }
  

  

  

  

  

  

  

  

  @Override
  protected CompilerPass getProcessor(Compiler compiler) {
    return new PeepholeOptimizationsPass(compiler,new ExploitAssigns());
  }
}
